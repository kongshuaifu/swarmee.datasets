input {
  stdin { }
}

filter {

if "IDCJAC0009" in [message] {

  csv {
      separator => ","
#Product code,Bureau of Meteorology station number,Year,Month,Day,rainfallAmount  (Degree C),Days of accumulation of maximum temperature,Quality
     columns => ["productCode" , 
                 "stationNumber",
                 "year",
                 "month",
                 "day" ,
                 "rainfallAmount",
                 "daysOfAccumulationOfMaximum" ,
                 "qualityFlag"
                 ]
  }
}

if "IDCJAC0010" in [message] {
  csv {
      separator => ","
     columns => ["productCode" , 
                 "stationNumber",
                 "year",
                 "month",
                 "day" ,
                 "maximumTemperature",
                 "daysOfAccumulationOfMaximum" ,
                 "qualityFlag"
                 ]
  }
}

mutate    { add_field => ["interimDate", "%{year} %{month} %{day}"] }

date      { match => [ "interimDate", "yyyy MM dd" ] target => "date" }

mutate    { remove_field => ["interimDate", "@timestamp", "@version", "host", "message"] 
            convert => { "stationNumber" => "integer" }}

translate {
    field => "stationNumber"
    dictionary_path => "./weather-austalia-stations.csv"
    destination => "stationDetails"
}

csv {
      separator => "|"
      source => "stationDetails"
      columns => ["stationName" , 
                 "lat",
                 "lon",
                 "stateMonth",
                 "startYear" ,
                 "endMonth",
                 "endYear"
                 ]
                 }  

mutate {
      convert => { "lon" => "float" }
      convert => { "lat" => "float" }
      convert => { "year" => "integer"}
      convert => { "month" => "integer"}
      convert => { "day" => "integer"}
      convert => { "maximumTemperature" => "float"}
      convert => { "daysOfAccumulationOfMaximum" => "integer"}
            rename => {
          "lon" => "[location][lon]"
          "lat" => "[location][lat]"
      }
     remove_field => ["stationDetails"]
  }
  

translate { field => "month"  
            dictionary => ["1", "4-summer",
"2", "4-summer", 
"3", "1-autumn", 
"4", "1-autumn", 
"5", "1-autumn", 
"6", "2-winter", 
"7", "2-winter", 
"8", "2-winter", 
"9", "3-spring", 
"10", "3-spring", 
"11", "3-spring", 
"12", "4-summer"
] destination => "season" fallback => "unknown"}

}
output {

##      stdout { codec => rubydebug }
##    stdout { codec => dots }

elasticsearch {
    index => "weather-australia-2-4-2017"
    hosts => ["${HOST:localhost}:9200"]
    doc_as_upsert => true
    action => "update"
    document_type => "weather"
    document_id =>    "%{year}_%{month}_%{day}_%{stationNumber}"
    template      => "./weather-australia.json"
    template_name => "weather-australia-2-4-2017"
    template_overwrite => true
    sniffing => true
    sniffing_delay => 999
}
}






